normal_CRC_S1 <- read.table("~/LOBICO/data/short.random.forest.up/selected_feature_cpm_Normal-CRC_S1.txt",
sep = '\t', header = T, row.names = 1)
normal_CRC <- read.table("~/LOBICO/data/short.random.forest.up/selected_feature_cpm_Normal-CRC.txt",
sep = '\t', header = T, row.names = 1)
## Normal-CRC part
bi_normal_CRC <- normal_CRC
bi_normal_CRC <- as.data.frame(t(bi_normal_CRC))
bi_normal_CRC$names <- rownames(bi_normal_CRC)
bi_normal_CRC <- arrange(bi_normal_CRC, names)
rownames(bi_normal_CRC) <- bi_normal_CRC$names
bi_normal_CRC <- as.data.frame(t(bi_normal_CRC[,-11]))
a = nrow(bi_normal_CRC)
library(dplyr)
## Normal-CRC part
bi_normal_CRC <- normal_CRC
bi_normal_CRC <- as.data.frame(t(bi_normal_CRC))
bi_normal_CRC$names <- rownames(bi_normal_CRC)
bi_normal_CRC <- arrange(bi_normal_CRC, names)
rownames(bi_normal_CRC) <- bi_normal_CRC$names
bi_normal_CRC <- as.data.frame(t(bi_normal_CRC[,-11]))
a = nrow(bi_normal_CRC)
b = ncol(bi_normal_CRC)
for(i in 1:a){
temp <- sum(normal_CRC[i,])/b
sample_mean_CRC <- sum(normal_CRC[i,1:100]) / 100
normal_mean_CRC <- sum(normal_CRC[i,101:150]) / 50
if(normal_mean_CRC <= sample_mean_CRC){
for(j in 1:b){
if(normal_CRC[i,j] >= normal_mean_CRC + 2 * sd(normal_CRC[i,101:150])){
bi_normal_CRC[i,j] <- 1
}
else{
bi_normal_CRC[i,j] <- 0
}
}
}
else{
for(j in 1:b){
if(normal_CRC[i,j] <= normal_mean_CRC - 2 * sd(normal_CRC[i,101:150])){
bi_normal_CRC[i,j] <- 1
}
else{
bi_normal_CRC[i,j] <- 0
}
}
}
}
write.table(bi_normal_CRC, "~/LOBICO/data/short.random.forest.up/Bi-Normal-CRC.txt",
sep = "\t", row.names = T, col.names = T)
normal_CRC_class <- c(rep(1, times = 100), rep(0, times = 50))
write.table(normal_CRC_class, "~/LOBICO/data/short.random.forest.up/Normal-CRC-biclass.txt",
sep = "\t", row.names = F, col.names = F)
## Normal-CRC part
bi_normal_CRC <- normal_CRC
bi_normal_CRC <- as.data.frame(t(bi_normal_CRC))
bi_normal_CRC$names <- rownames(bi_normal_CRC)
bi_normal_CRC <- arrange(bi_normal_CRC, names)
rownames(bi_normal_CRC) <- bi_normal_CRC$names
bi_normal_CRC <- as.data.frame(t(bi_normal_CRC[,-11]))
a = nrow(bi_normal_CRC)
b = ncol(bi_normal_CRC)
for(i in 1:a){
temp <- sum(normal_CRC[i,])/b
sample_mean_CRC <- sum(normal_CRC[i,1:100]) / 100
normal_mean_CRC <- sum(normal_CRC[i,101:150]) / 50
if(normal_mean_CRC <= sample_mean_CRC){
for(j in 1:b){
if(normal_CRC[i,j] >= normal_mean_CRC + sd(normal_CRC[i,101:150])){
bi_normal_CRC[i,j] <- 1
}
else{
bi_normal_CRC[i,j] <- 0
}
}
}
else{
for(j in 1:b){
if(normal_CRC[i,j] <= normal_mean_CRC - sd(normal_CRC[i,101:150])){
bi_normal_CRC[i,j] <- 1
}
else{
bi_normal_CRC[i,j] <- 0
}
}
}
}
write.table(bi_normal_CRC, "~/LOBICO/data/short.random.forest.up/Bi-Normal-CRC.txt",
sep = "\t", row.names = T, col.names = T)
normal_CRC_class <- c(rep(1, times = 100), rep(0, times = 50))
write.table(normal_CRC_class, "~/LOBICO/data/short.random.forest.up/Normal-CRC-biclass.txt",
sep = "\t", row.names = F, col.names = F)
View(bi_normal_CRC)
## CRC Logic Model
LogicModel_CRC <- list(c(1, 5, 7), 5)   # ~x1  & ~x5  & x7   |  x5
dat_CRC <- read.table('~/LOBICO/data/short.random.forest.up/Bi-Normal-CRC.txt')
class_CRC <- read.table('~/LOBICO/data/short.random.forest.up/Normal-CRC-biclass.txt')
model1_CRC <- dat_CRC[LogicModel_CRC[[1]],]
model2_CRC <- dat_CRC[LogicModel_CRC[[2]],]
results_CRC <- ((!model1_CRC[1,]) & (!model1_CRC[2,]) & (model1_CRC[3,])) | model2_CRC
table_CRC <- table(results_CRC, t(class_CRC))
accuracy_CRC <- (table_CRC[1,1] + table_CRC[2,2])/nrow(class_CRC)
recall_CRC <- table_CRC[2,2] / (table_CRC[2,2] + table_CRC[1,2])
precision_CRC <- table_CRC[2,2] / (table_CRC[2,2] + table_CRC[2,1])
F1_CRC <- 2 * recall_CRC * precision_CRC / (recall_CRC + precision_CRC)
table_CRC
F1_CRC
## Normal-CRC part
bi_normal_CRC <- normal_CRC
bi_normal_CRC <- as.data.frame(t(bi_normal_CRC))
bi_normal_CRC$names <- rownames(bi_normal_CRC)
bi_normal_CRC <- arrange(bi_normal_CRC, names)
rownames(bi_normal_CRC) <- bi_normal_CRC$names
bi_normal_CRC <- as.data.frame(t(bi_normal_CRC[,-11]))
a = nrow(bi_normal_CRC)
b = ncol(bi_normal_CRC)
for(i in 1:a){
temp <- sum(normal_CRC[i,])/b
sample_mean_CRC <- sum(normal_CRC[i,1:100]) / 100
normal_mean_CRC <- sum(normal_CRC[i,101:150]) / 50
if(normal_mean_CRC <= sample_mean_CRC){
for(j in 1:b){
if(normal_CRC[i,j] >= normal_mean_CRC + sd(normal_CRC[i,101:150])){
bi_normal_CRC[i,j] <- 1
}
else{
bi_normal_CRC[i,j] <- 0
}
}
}
else{
for(j in 1:b){
if(normal_CRC[i,j] <= normal_mean_CRC - sd(normal_CRC[i,101:150])){
bi_normal_CRC[i,j] <- 0
}
else{
bi_normal_CRC[i,j] <- 1
}
}
}
}
write.table(bi_normal_CRC, "~/LOBICO/data/short.random.forest.up/Bi-Normal-CRC.txt",
sep = "\t", row.names = T, col.names = T)
normal_CRC_class <- c(rep(1, times = 100), rep(0, times = 50))
write.table(normal_CRC_class, "~/LOBICO/data/short.random.forest.up/Normal-CRC-biclass.txt",
sep = "\t", row.names = F, col.names = F)
View(normal_CRC)
heatmap(as.matrix(normal_CRC))
heatmap(as.matrix(normal_CRC), Colv = NA)
## Normal-CRC part
bi_normal_CRC <- normal_CRC
bi_normal_CRC <- as.data.frame(t(bi_normal_CRC))
bi_normal_CRC$names <- rownames(bi_normal_CRC)
bi_normal_CRC <- arrange(bi_normal_CRC, names)
rownames(bi_normal_CRC) <- bi_normal_CRC$names
bi_normal_CRC <- as.data.frame(t(bi_normal_CRC[,-11]))
heatmap(as.matrix(bi_normal_CRC), Colv = NA)
View(bi_normal_CRC)
p <- heatmap(as.matrix(bi_normal_CRC), Colv = NA)
p
heatmap(as.matrix(bi_normal_CRC), Colv = NA)
View(normal_CRC)
